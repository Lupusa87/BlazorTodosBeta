@using BlazorTodos.Components
@using BlazorTodos.Modals

<div class="bm-container @(btModal.IsDisplayed ? "bm-active" : string.Empty)">

    @if (btModal.CanCloseModal)
    {
    <div class="bm-overlay" @onclick="@CloseModal"></div>
    }
    <div class="blazor-modal">
        <div class="bm-header">
            <h3 class="bm-title">@LocalData.uiTranslator.Translate(Title)</h3>
            @if (btModal.CanCloseModal)
            {
                <button type="button" class="bm-close" @onclick="@CloseModal">
                    <span>&times;</span>
                </button>
            }
            </div>
        <div class="bm-content">
            <div class="bm-content">

                @switch (btModal.modalForm)
                {
                    case Classes.Enums.ModalForm.Message:
                        <CompMessage @ref="@LocalData.compMessage" UniqueID="@LocalFunctions.GetUniqueID()"></CompMessage>
                        break;
                    case Classes.Enums.ModalForm.Error:
                        <CompError @ref="@LocalData.compError" UniqueID="@LocalFunctions.GetUniqueID()"></CompError>
                        break;
                    case Classes.Enums.ModalForm.Confirm:
                        <CompConfirm></CompConfirm>
                        break;
                    case Classes.Enums.ModalForm.Login:
                        <CompLogin></CompLogin>
                        break;
                    case Classes.Enums.ModalForm.Registration:
                        <CompRegistration></CompRegistration>
                        break;
                    case Classes.Enums.ModalForm.AddOrUpdateTodo:
                        <CompAddOrUpdateTodo @ref="@LocalData.compAddOrUpdateTodo" UniqueID="@LocalFunctions.GetUniqueID()"></CompAddOrUpdateTodo>
                        break;
                    case Classes.Enums.ModalForm.AddOrUpdateCategory:
                        <CompAddOrUpdateCategory @ref="@LocalData.compAddOrUpdateCategory" UniqueID="@LocalFunctions.GetUniqueID()"></CompAddOrUpdateCategory>
                        break;
                    case Classes.Enums.ModalForm.AddOrUpdateFeedback:
                        <CompAddOrUpdateFeedback @ref="@LocalData.compAddOrUpdateFeedback" UniqueID="@LocalFunctions.GetUniqueID()"></CompAddOrUpdateFeedback>
                        break;
                    case Classes.Enums.ModalForm.ChangePassword:
                        <CompChangePassword></CompChangePassword>
                        break;
                    default:
                        break;
                }


            </div>
        </div>
    </div>

</div>